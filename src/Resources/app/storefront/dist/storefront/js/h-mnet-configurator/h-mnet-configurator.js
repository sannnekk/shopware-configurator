(()=>{"use strict";var t={156:t=>{var e=function(t){var e;return!!t&&"object"==typeof t&&"[object RegExp]"!==(e=Object.prototype.toString.call(t))&&"[object Date]"!==e&&t.$$typeof!==r},r="function"==typeof Symbol&&Symbol.for?Symbol.for("react.element"):60103;function i(t,e){return!1!==e.clone&&e.isMergeableObject(t)?l(Array.isArray(t)?[]:{},t,e):t}function n(t,e,r){return t.concat(e).map(function(t){return i(t,r)})}function a(t){return Object.keys(t).concat(Object.getOwnPropertySymbols?Object.getOwnPropertySymbols(t).filter(function(e){return Object.propertyIsEnumerable.call(t,e)}):[])}function s(t,e){try{return e in t}catch(t){return!1}}function l(t,r,o){(o=o||{}).arrayMerge=o.arrayMerge||n,o.isMergeableObject=o.isMergeableObject||e,o.cloneUnlessOtherwiseSpecified=i;var c,u,d=Array.isArray(r);return d!==Array.isArray(t)?i(r,o):d?o.arrayMerge(t,r,o):(u={},(c=o).isMergeableObject(t)&&a(t).forEach(function(e){u[e]=i(t[e],c)}),a(r).forEach(function(e){(!s(t,e)||Object.hasOwnProperty.call(t,e)&&Object.propertyIsEnumerable.call(t,e))&&(s(t,e)&&c.isMergeableObject(r[e])?u[e]=(function(t,e){if(!e.customMerge)return l;var r=e.customMerge(t);return"function"==typeof r?r:l})(e,c)(t[e],r[e],c):u[e]=i(r[e],c))}),u)}l.all=function(t,e){if(!Array.isArray(t))throw Error("first argument should be an array");return t.reduce(function(t,r){return l(t,r,e)},{})},t.exports=l}},e={};function r(i){var n=e[i];if(void 0!==n)return n.exports;var a=e[i]={exports:{}};return t[i](a,a.exports,r),a.exports}r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var i in e)r.o(e,i)&&!r.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var i=r(156),n=r.n(i);class a{static ucFirst(t){return t.charAt(0).toUpperCase()+t.slice(1)}static lcFirst(t){return t.charAt(0).toLowerCase()+t.slice(1)}static toDashCase(t){return t.replace(/([A-Z])/g,"-$1").replace(/^-/,"").toLowerCase()}static toLowerCamelCase(t,e){let r=a.toUpperCamelCase(t,e);return a.lcFirst(r)}static toUpperCamelCase(t,e){return e?t.split(e).map(t=>a.ucFirst(t.toLowerCase())).join(""):a.ucFirst(t.toLowerCase())}static parsePrimitive(t){try{return/^\d+(.|,)\d+$/.test(t)&&(t=t.replace(",",".")),JSON.parse(t)}catch(e){return t.toString()}}}class s{constructor(t=document){this._el=t,t.$emitter=this,this._listeners=[]}publish(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=new CustomEvent(t,{detail:e,cancelable:r});return this.el.dispatchEvent(i),i}subscribe(t,e){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=this,n=t.split("."),a=r.scope?e.bind(r.scope):e;if(r.once&&!0===r.once){let e=a;a=function(r){i.unsubscribe(t),e(r)}}return this.el.addEventListener(n[0],a),this.listeners.push({splitEventName:n,opts:r,cb:a}),!0}unsubscribe(t){let e=t.split(".");return this.listeners=this.listeners.reduce((t,r)=>([...r.splitEventName].sort().toString()===e.sort().toString()?this.el.removeEventListener(r.splitEventName[0],r.cb):t.push(r),t),[]),!0}reset(){return this.listeners.forEach(t=>{this.el.removeEventListener(t.splitEventName[0],t.cb)}),this.listeners=[],!0}get el(){return this._el}set el(t){this._el=t}get listeners(){return this._listeners}set listeners(t){this._listeners=t}}class l{constructor(t,e={},r=!1){if(!(t instanceof Node)){console.warn(`There is no valid element given while trying to create a plugin instance for "${r}".`);return}this.el=t,this.$emitter=new s(this.el),this._pluginName=this._getPluginName(r),this.options=this._mergeOptions(e),this._initialized=!1,this._registerInstance(),this._init()}init(){console.warn(`The "init" method for the plugin "${this._pluginName}" is not defined. The plugin will not be initialized.`)}update(){}_init(){this._initialized||(this.init(),this._initialized=!0)}_update(){this._initialized&&this.update()}_mergeOptions(t){let e=[this.constructor.options,this.options,t];return e.push(this._getConfigFromDataAttribute()),e.push(this._getOptionsFromDataAttribute()),n().all(e.filter(t=>t instanceof Object&&!(t instanceof Array)).map(t=>t||{}))}_getConfigFromDataAttribute(){let t={};if("function"!=typeof this.el.getAttribute)return t;let e=a.toDashCase(this._pluginName),r=this.el.getAttribute(`data-${e}-config`);return r?window.PluginConfigManager.get(this._pluginName,r):t}_getOptionsFromDataAttribute(){let t={};if("function"!=typeof this.el.getAttribute)return t;let e=a.toDashCase(this._pluginName),r=this.el.getAttribute(`data-${e}-options`);if(r)try{return JSON.parse(r)}catch(t){console.error(`The data attribute "data-${e}-options" could not be parsed to json: ${t.message}`)}return t}_registerInstance(){window.PluginManager.getPluginInstancesFromElement(this.el).set(this._pluginName,this),window.PluginManager.getPlugin(this._pluginName,!1).get("instances").push(this)}_getPluginName(t){return t||(t=this.constructor.name),t}}let{PluginManager:o}=window;o&&o.register("HmnetProductConfigurator",class extends l{init(){this.registerEvents(),this.calculate()}registerEvents(){let t=this;document.querySelector("[data-quantity-selector] input")?.addEventListener("change",t.calculate.bind(t)),document.querySelector("[data-quantity-selector] input")?.addEventListener("input",t.calculate.bind(t)),document.querySelector("[data-quantity-selector] .js-button-minus")?.addEventListener("click",()=>{setTimeout(()=>t.calculate.bind(t),50)}),document.querySelector("[data-quantity-selector] .js-button-plus")?.addEventListener("click",()=>{setTimeout(()=>t.calculate.bind(t),50)}),document.querySelectorAll("[data-hmnet-field-select]").forEach(e=>e.addEventListener("change",t.calculate.bind(t)))}getQuantity(){return parseInt(document.querySelector("[data-quantity-selector] input")?.value)||0}calculate(){this.taxRate=parseFloat(this.el.dataset.taxRate),this.currencyDecimals=parseInt(this.el.dataset.currencyDecimals)||2,this.fieldIds=[...this.el.querySelectorAll("[data-hmnet-field]")].map(t=>t.dataset.fieldId).filter(Boolean);let t=this.getQuantity(),e=0,r=[],i={};for(let n of this.fieldIds){let[a,s,l]=this.getDataForField(n,t),o=t*a;this.setFieldElement(n,a,t,o),r.push(...l),e+=o,e+=l.reduce((t,e)=>t+e.price,0),s&&(i[n]=s)}let[n,a]=this.getGrossFromNet(e);this.setFilmAndSetupOptions(r),this.setChosenOptionsInCartData(i),this.setWholePriceElements(e,n,a)}setFilmAndSetupOptions(t){this.el.querySelector("[data-hmnet-breakdown-list]").innerHTML=t.filter(t=>t.price>0).map(t=>this.getOptionTemplate(t.label,t.price)).join("")}getOptionTemplate(t,e){return`<li>
			<span>${t}</span>
			<span>${e}</span>
		</li>`}getDataForField(t,e){let r=[0,null,[],[]],i=document.querySelector(`[data-hmnet-field][data-field-id="${t}"]`);if(!i)return r;let n=i.querySelector("[data-hmnet-field-select]").value,a=parseFloat(i.dataset.setupPrice)||0,s=parseFloat(i.dataset.filmPrice)||0,l=Object.values(JSON.parse(i.dataset.options||"[]"));if(!n)return r;let o=l.find(t=>Object.values(t.possibilities).some(t=>t.id===n)),c=Object.values(o?.possibilities).find(t=>t.id===n);return o&&c?[this.getUnitPriceForOption(o.priceTiers,c.multiplicator,e),n,[{label:`Einrichtung: ${o.translated.name} ${c.translated.name?c.translated.name:""}`,price:(a??0)*(c.multiplicator??1)},{label:`Film: ${o.translated.name} ${c.translated.name?c.translated.name:""}`,price:(s??0)*(c.multiplicator??1)}]]:r}getUnitPriceForOption(t,e,r){let i=t.find(t=>t.quantityStart<=r&&t.quantityEnd>=r||null===t.quantityEnd&&t.quantityStart<=r);return i?i.price*e:0}setChosenOptionsInCartData(t){}getGrossFromNet(t){let e=parseFloat((t*(1+this.taxRate/100)).toFixed(this.currencyDecimals));return[e,e-t]}setWholePriceElements(t,e,r){let i=document.querySelector("[data-hmnet-product-configurator-total-net]"),n=document.querySelector("[data-hmnet-product-configurator-total-gross]"),a=document.querySelector("[data-hmnet-product-configurator-total-tax]");i.innerText=t,n.innerText=e,a.innerText=r}setFieldElement(t,e,r,i){let n=document.querySelector(`[data-hmnet-field][data-field-id="${t}"]`);if(!n)return;let a=n.querySelector("[data-hmnet-field-unit-price]"),s=n.querySelector("[data-hmnet-field-amount]"),l=n.querySelector("[data-hmnet-field-unit-total]");a.innerText=e,s.innerText=r,l.innerText=i}constructor(...t){super(...t),this.currencyDecimals=2,this.taxRate=19,this.fieldIds=[]}},"[data-hmnet-product-configurator]")})();