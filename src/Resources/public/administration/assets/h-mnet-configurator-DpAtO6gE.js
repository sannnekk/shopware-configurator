const p={"hmnet-configurator":{general:{tabLabel:"Configurator",moduleTitle:"HMnet Configurator",moduleDescription:"Manage configurable options and pricing tiers for this product."},buttons:{addOption:"Add option",save:"Save configurator"},empty:{title:"No configurator options yet",description:"Add your first option to start configuring this product."},option:{titlePlaceholder:"New option",name:"Option name",position:"Position",required:"Required",noChoices:"No choices have been added yet. Use the plus button to add one."},choice:{titlePlaceholder:"New choice",name:"Choice name",position:"Position",addPriceTier:"Add price tier"},possibility:{heading:"Possibilities",add:"Add possibility",empty:"No possibilities yet. Add one to define selections.",name:"Possibility name",titlePlaceholder:"New possibility",multiplier:"Multiplier",position:"Position"},pricing:{heading:"Price tiers",rangeStart:"Minimum quantity",rangeEnd:"Maximum quantity",price:"Surcharge",empty:"No price tiers yet. Add one to define surcharges.",rangeFrom:"From {start}",rangeBetween:"{start} – {end}"},notifications:{saveSuccess:"Configurator saved successfully.",saveError:"Saving configurator changes failed."}}},h={"hmnet-configurator":{general:{tabLabel:"Konfigurator",moduleTitle:"HMnet Konfigurator",moduleDescription:"Verwalten Sie konfigurierbare Optionen und Preisstaffeln für dieses Produkt."},buttons:{addOption:"Option hinzufügen",save:"Konfigurator speichern"},empty:{title:"Noch keine Konfigurator-Optionen",description:"Fügen Sie die erste Option hinzu, um mit der Konfiguration zu beginnen."},option:{titlePlaceholder:"Neue Option",name:"Optionsname",position:"Position",required:"Pflichtfeld",noChoices:"Es wurden noch keine Auswahlmöglichkeiten angelegt. Verwenden Sie die Plus-Schaltfläche, um eine hinzuzufügen."},choice:{titlePlaceholder:"Neue Auswahl",name:"Auswahlname",position:"Position",addPriceTier:"Preisstaffel hinzufügen"},possibility:{heading:"Varianten",add:"Variante hinzufügen",empty:"Es sind noch keine Varianten definiert. Fügen Sie eine hinzu, um Auswahlen zu ermöglichen.",name:"Variantenname",titlePlaceholder:"Neue Variante",multiplier:"Multiplikator",position:"Position"},pricing:{heading:"Preisstaffeln",rangeStart:"Mindestmenge",rangeEnd:"Höchstmenge",price:"Aufpreis",empty:"Noch keine Preisstaffel vorhanden. Fügen Sie eine hinzu, um Aufpreise zu definieren.",rangeFrom:"Ab {start}",rangeBetween:"{start} – {end}"},notifications:{saveSuccess:"Konfigurator wurde erfolgreich gespeichert.",saveError:"Beim Speichern der Konfigurator-Daten ist ein Fehler aufgetreten."}}};Shopware.Locale.extend("en-GB",p);Shopware.Locale.extend("de-DE",h);const u=`{% block sw_product_detail_hmnet_configurator %} <div class="sw-product-detail-hmnet-configurator"> <template v-if="isLoading"> <sw-skeleton variant="detail-bold" /> <sw-skeleton /> </template> <template v-else> <mt-card class="hmnet-configurator__toolbar-card" position-identifier="hmnet-configurator__toolbar" :is-loading="isSaving" > <template #title> {{ $tc('hmnet-configurator.general.tabLabel') }} </template> <template #toolbar> <mt-button variant="ghost" :disabled="!acl.can('product.editor')" @click="onAddOption" > <mt-icon name="regular-plus" size="16px" /> {{ $tc('hmnet-configurator.buttons.addOption') }} </mt-button> <sw-button-process class="hmnet-configurator__save" variant="primary" :is-loading="isSaving" :disabled="!acl.can('product.editor') || options.length === 0" size="medium" @click="onSaveConfigurator" > {{ $tc('hmnet-configurator.buttons.save') }} </sw-button-process> </template> </mt-card> <sw-empty-state v-if="options.length === 0" class="hmnet-configurator__empty-state" :title="$tc('hmnet-configurator.empty.title')" :description="$tc('hmnet-configurator.empty.description')" /> <mt-card v-for="option in options" :key="option.id" class="hmnet-configurator-option" position-identifier="hmnet-configurator__option-card" :title="option.name || $tc('hmnet-configurator.option.titlePlaceholder')" :collapsible="true" > <template #toolbar> <sw-container columns="5fr 2fr 3fr 1fr 1fr 1fr" gap="16px" class="hmnet-configurator-option__header" justify="space-between" align="center"> <sw-text-field class="hmnet-configurator-option__name" :label="$tc('hmnet-configurator.option.name')" :placeholder="$tc('hmnet-configurator.option.titlePlaceholder')" v-model="option.name" :disabled="!acl.can('product.editor')" /> <sw-number-field class="hmnet-configurator-option__position" :label="$tc('hmnet-configurator.option.position')" v-model.number="option.position" :min="0" :allow-empty="true" :disabled="!acl.can('product.editor')" /> <sw-switch-field class="hmnet-configurator-option__required" :label="$tc('hmnet-configurator.option.required')" v-model="option.required" :disabled="!acl.can('product.editor')" /> <sw-button-group class="hmnet-configurator-option__actions"> <sw-button variant="tertiary" square :disabled="!acl.can('product.editor')" @click="onAddChoice(option)" > <mt-icon name="regular-plus" size="16px" /> </sw-button> <sw-button variant="danger" square :disabled="!acl.can('product.deleter')" @click="onRemoveOption(option)" > <mt-icon name="regular-trash" size="16px" /> </sw-button> </sw-button-group> </sw-container> </template> <template #default> <div class="hmnet-configurator-option__choices" v-if="option.choices.length > 0"> <hmnet-configurator-choice-tree v-for="choice in option.choices" :key="choice.id" :choice="choice" :can-edit="acl.can('product.editor')" :can-delete="acl.can('product.deleter')" @remove="onRemoveChoice(option, $event)" @duplicate="onDuplicateChoice(option, $event)" @add-tier="onAddPriceTier" @remove-tier="({ choice: tierChoice, tier }) => onRemovePriceTier(tierChoice, tier)" @add-possibility="onAddPossibility" @remove-possibility="onRemovePossibility" /> </div> <div v-else class="hmnet-configurator-option__choices-empty" > {{ $tc('hmnet-configurator.option.noChoices') }} </div> </template> </mt-card> </template> </div> {% endblock %}`,m=`{% block hmnet_configurator_choice_tree %} <div class="hmnet-configurator-choice" :style="paddingStyle"> <sw-card class="hmnet-configurator-choice__card" :title="choice.name || $tc('hmnet-configurator.choice.titlePlaceholder')" :collapsible="true" :is-collapsed="false" > <template #default> <sw-container columns="2fr 1fr auto" gap="16px" align="end"> <sw-text-field class="hmnet-configurator-choice__field" :label="$tc('hmnet-configurator.choice.name')" :placeholder="$tc('hmnet-configurator.choice.titlePlaceholder')" v-model="choice.name" :disabled="!canEdit || !acl.can('product.editor')" /> <sw-number-field class="hmnet-configurator-choice__field" :label="$tc('hmnet-configurator.choice.position')" v-model.number="choice.position" :allow-empty="true" :min="0" :disabled="!canEdit || !acl.can('product.editor')" /> <sw-button-group class="hmnet-configurator-choice__toolbar" > <sw-button variant="tertiary" square :disabled="!canEdit || !acl.can('product.editor')" @click="onDuplicateChoice" > <mt-icon name="regular-copy" size="16px" /> </sw-button> <sw-button variant="danger" square :disabled="!canDelete || !acl.can('product.deleter')" @click="onRemoveChoice" > <mt-icon name="regular-trash" size="16px" /> </sw-button> </sw-button-group> </sw-container> <div class="hmnet-configurator-choice__price-tiers"> <div class="hmnet-configurator-choice__price-tiers-header"> <h4>{{ $tc('hmnet-configurator.pricing.heading') }}</h4> <sw-button variant="ghost" size="small" :disabled="!canEdit || !acl.can('product.editor')" @click="onAddTier" > {{ $tc('hmnet-configurator.choice.addPriceTier') }} </sw-button> </div> <div v-if="priceTiers.length === 0" class="hmnet-configurator-choice__price-tiers-empty"> {{ $tc('hmnet-configurator.pricing.empty') }} </div> <div v-for="tier in priceTiers" :key="tier.id" class="hmnet-configurator-choice__price-tier-row" > <sw-container columns="3fr 3fr 3fr 1fr" gap="16px" align="center"> <sw-number-field :label="$tc('hmnet-configurator.pricing.rangeStart')" v-model.number="tier.rangeStart" :min="0" :step="1" :disabled="!canEdit || !acl.can('product.editor')" /> <sw-number-field :label="$tc('hmnet-configurator.pricing.rangeEnd')" v-model.number="tier.rangeEnd" :allow-empty="true" :min="0" :step="1" :disabled="!canEdit || !acl.can('product.editor')" /> <sw-number-field :label="$tc('hmnet-configurator.pricing.price')" v-model.number="tier.price" :min="0" :step="0.01" :digits="3" :disabled="!canEdit || !acl.can('product.editor')" /> <sw-button variant="danger" size="small" square :disabled="!canDelete || !acl.can('product.deleter')" @click="onRemoveTier(tier)" > <mt-icon name="regular-trash" size="16px" /> </sw-button> </sw-container> </div> </div> <div class="hmnet-configurator-choice__possibilities"> <div class="hmnet-configurator-choice__possibilities-header"> <h4>{{ $tc('hmnet-configurator.possibility.heading') }}</h4> <sw-button variant="ghost" size="small" :disabled="!canEdit || !acl.can('product.editor')" @click="onAddPossibility" > {{ $tc('hmnet-configurator.possibility.add') }} </sw-button> </div> <div v-if="possibilities.length === 0" class="hmnet-configurator-choice__possibilities-empty" > {{ $tc('hmnet-configurator.possibility.empty') }} </div> <div v-for="possibility in possibilities" :key="possibility.id" class="hmnet-configurator-choice__possibility-row" > <sw-container columns="4fr 2fr 2fr 1fr" gap="16px" align="center"> <sw-text-field :label="$tc('hmnet-configurator.possibility.name')" :placeholder="$tc('hmnet-configurator.possibility.titlePlaceholder')" v-model="possibility.name" :disabled="!canEdit || !acl.can('product.editor')" /> <sw-number-field :label="$tc('hmnet-configurator.possibility.multiplier')" v-model.number="possibility.multiplier" :min="0" :step="0.01" :digits="3" :disabled="!canEdit || !acl.can('product.editor')" /> <sw-number-field :label="$tc('hmnet-configurator.possibility.position')" v-model.number="possibility.position" :allow-empty="true" :min="0" :disabled="!canEdit || !acl.can('product.editor')" /> <sw-button variant="danger" size="small" square :disabled="!canDelete || !acl.can('product.deleter')" @click="onRemovePossibility(possibility)" > <mt-icon name="regular-trash" size="16px" /> </sw-button> </sw-container> </div> </div> </template> </sw-card> </div> {% endblock %}`,{Component:g}=Shopware;g.register("hmnet-configurator-choice-tree",{template:m,inject:["acl"],props:{choice:{type:Object,required:!0},canEdit:{type:Boolean,default:!0},canDelete:{type:Boolean,default:!0},nestingLevel:{type:Number,default:0}},emits:["remove","duplicate","add-tier","remove-tier","add-possibility","remove-possibility"],computed:{paddingStyle(){return{"--hmnet-configurator-choice-indent":`${Math.min(this.nestingLevel,5)*24}px`}},priceTiers(){return this.choice.priceTiers?this.choice.priceTiers:[]},possibilities(){return this.choice.possibilities?this.choice.possibilities:[]}},methods:{onRemoveChoice(){this.$emit("remove",this.choice)},onDuplicateChoice(){this.$emit("duplicate",this.choice)},onAddTier(){this.$emit("add-tier",this.choice)},onRemoveTier(i){this.$emit("remove-tier",{choice:this.choice,tier:i})},onAddPossibility(){this.$emit("add-possibility",this.choice)},onRemovePossibility(i){this.$emit("remove-possibility",{choice:this.choice,possibility:i})}}});const{Component:f,Mixin:b,Context:r}=Shopware,{Criteria:l,EntityCollection:a}=Shopware.Data;f.register("sw-product-detail-hmnet-configurator",{template:u,inject:["repositoryFactory","acl"],mixins:[b.getByName("notification")],data(){return{isLocalLoading:!1,isSaving:!1,optionsCollection:null,deletedOptionIds:[],deletedChoiceIds:[],deletedPriceTierIds:[],deletedPossibilityIds:[]}},computed:{productStore(){return Shopware.Store.get("swProductDetail")},product(){var i;return((i=this.productStore)==null?void 0:i.product)??null},productId(){var i;return((i=this.product)==null?void 0:i.id)??null},isProductLoading(){var i;return((i=this.productStore)==null?void 0:i.isLoading)??!1},languageId(){return Shopware.Store.get("context").api.languageId},options(){return this.optionsCollection||(this.optionsCollection=new a(this.optionRepository.route,this.optionRepository.entityName,r.api)),this.optionsCollection},optionRepository(){return this.repositoryFactory.create("hmnet_configurator_option")},choiceRepository(){return this.repositoryFactory.create("hmnet_configurator_choice")},priceTierRepository(){return this.repositoryFactory.create("hmnet_configurator_choice_price_tier")},possibilityRepository(){return this.repositoryFactory.create("hmnet_configurator_possibility")},isLoading(){return this.isProductLoading||this.isLocalLoading}},watch:{productId:{handler(){this.loadOptions()},immediate:!0},languageId(){this.loadOptions()}},methods:{async loadOptions(){var s,o,n,c;if(!this.productId){this.optionsCollection=new a(this.optionRepository.route,this.optionRepository.entityName,r.api);return}this.isLocalLoading=!0;const i=new l(1,200);i.addFilter(l.equals("productId",this.productId)),i.addSorting(l.sort("position","ASC")),i.addAssociation("translations");const e=i.getAssociation("choices");e.addSorting(l.sort("position","ASC")),e.addAssociation("translations"),e.addAssociation("priceTiers"),e.getAssociation("priceTiers").addSorting(l.sort("rangeStart","ASC")),e.addAssociation("possibilities");const t=e.getAssociation("possibilities");t.addSorting(l.sort("position","ASC")),t.addAssociation("translations");try{const d=await this.optionRepository.search(i,r.api);this.optionsCollection=d,this.normaliseOptions()}catch(d){this.createNotificationError({message:((c=(n=(o=(s=d==null?void 0:d.response)==null?void 0:s.data)==null?void 0:o.errors)==null?void 0:n[0])==null?void 0:c.detail)??d.message})}finally{this.isLocalLoading=!1}},normaliseOptions(){this.options.forEach((i,e)=>{this.ensureOptionCollections(i),(i.position===null||i.position===void 0)&&(i.position=e)})},ensureOptionCollections(i){var e;i.choices instanceof a||(i.choices=new a(this.choiceRepository.route,this.choiceRepository.entityName,r.api,((e=i.choices)==null?void 0:e.criteria)??new l(1,200),i.choices?i.choices:[])),i.choices.forEach((t,s)=>{this.ensureChoiceCollections(t,s)})},ensureChoiceCollections(i,e=0){var t,s;(i.position===null||i.position===void 0)&&(i.position=e),i.priceTiers instanceof a||(i.priceTiers=new a(this.priceTierRepository.route,this.priceTierRepository.entityName,r.api,((t=i.priceTiers)==null?void 0:t.criteria)??new l(1,100),i.priceTiers?i.priceTiers:[])),i.possibilities instanceof a||(i.possibilities=new a(this.possibilityRepository.route,this.possibilityRepository.entityName,r.api,((s=i.possibilities)==null?void 0:s.criteria)??new l(1,100),i.possibilities?i.possibilities:[]))},createEmptyChoicesCollection(){return new a(this.choiceRepository.route,this.choiceRepository.entityName,r.api)},createEmptyPriceTierCollection(){return new a(this.priceTierRepository.route,this.priceTierRepository.entityName,r.api)},createEmptyPossibilityCollection(){return new a(this.possibilityRepository.route,this.possibilityRepository.entityName,r.api)},onAddOption(){if(!this.acl.can("product.editor"))return;const i=this.optionRepository.create(r.api);i.productId=this.productId,i.required=!1,i.position=this.options.length,i.name="",i.choices=this.createEmptyChoicesCollection(),this.options.add(i)},onRemoveOption(i){this.acl.can("product.deleter")&&(i.isNew()||this.deletedOptionIds.push(i.id),this.options.remove(i.id))},onAddChoice(i){if(!this.acl.can("product.editor"))return;const e=this.choiceRepository.create(r.api);e.optionId=i.id,e.position=i.choices.length,e.name="",e.priceTiers=this.createEmptyPriceTierCollection(),e.possibilities=this.createEmptyPossibilityCollection(),i.choices.add(e)},onRemoveChoice(i,e){this.acl.can("product.deleter")&&(this.markChoiceForDeletion(e),this.removeChoiceFromCollections(i,e))},markChoiceForDeletion(i){i.isNew()||this.deletedChoiceIds.push(i.id),i.priceTiers&&i.priceTiers.length>0&&i.priceTiers.forEach(e=>{e.isNew()||this.deletedPriceTierIds.push(e.id)}),i.possibilities&&i.possibilities.length>0&&i.possibilities.forEach(e=>{this.markPossibilityForDeletion(e)})},removeChoiceFromCollections(i,e){i.choices.remove(e.id)},onAddPriceTier(i){if(!this.acl.can("product.editor"))return;const e=this.priceTierRepository.create(r.api);e.choiceId=i.id,e.rangeStart=0,e.rangeEnd=null,e.price=0,i.priceTiers.add(e)},onRemovePriceTier(i,e){this.acl.can("product.deleter")&&(e.isNew()||this.deletedPriceTierIds.push(e.id),i.priceTiers.remove(e.id))},onAddPossibility(i){if(!this.acl.can("product.editor"))return;i.possibilities instanceof a||(i.possibilities=this.createEmptyPossibilityCollection());const e=this.possibilityRepository.create(r.api);e.choiceId=i.id,e.name="",e.multiplier=1,e.position=i.possibilities.length,i.possibilities.add(e)},onRemovePossibility({choice:i,possibility:e}){this.acl.can("product.deleter")&&(this.markPossibilityForDeletion(e),i.possibilities.remove(e.id))},markPossibilityForDeletion(i){!i||i.isNew()||this.deletedPossibilityIds.push(i.id)},onDuplicateChoice(i,e){if(!this.acl.can("product.editor"))return;const t=this.choiceRepository.create(r.api);t.optionId=i.id,t.position=i.choices.length,t.name=e.name,t.priceTiers=this.createEmptyPriceTierCollection(),t.possibilities=this.createEmptyPossibilityCollection(),e.priceTiers.forEach(s=>{const o=this.priceTierRepository.create(r.api);o.choiceId=t.id,o.rangeStart=s.rangeStart,o.rangeEnd=s.rangeEnd,o.price=s.price,t.priceTiers.add(o)}),e.possibilities.forEach(s=>{const o=this.possibilityRepository.create(r.api);o.choiceId=t.id,o.name=s.name,o.multiplier=s.multiplier,o.position=t.possibilities.length,t.possibilities.add(o)}),i.choices.add(t)},async onSaveConfigurator(){var i,e,t,s;if(this.productId){this.isSaving=!0;try{this.deletedPriceTierIds.length>0&&(await this.priceTierRepository.delete(this.deletedPriceTierIds,r.api),this.deletedPriceTierIds=[]),this.deletedPossibilityIds.length>0&&(await this.possibilityRepository.delete(this.deletedPossibilityIds,r.api),this.deletedPossibilityIds=[]),this.deletedChoiceIds.length>0&&(await this.choiceRepository.delete(this.deletedChoiceIds,r.api),this.deletedChoiceIds=[]),this.deletedOptionIds.length>0&&(await this.optionRepository.delete(this.deletedOptionIds,r.api),this.deletedOptionIds=[]);for(const o of this.options){o.productId=this.productId,await this.optionRepository.save(o,r.api);for(const n of o.choices){if(n.optionId=o.id,await this.choiceRepository.save(n,r.api),n.priceTiers&&n.priceTiers.length>0)for(const c of n.priceTiers)c.choiceId=n.id,c.rangeEnd===""&&(c.rangeEnd=null),await this.priceTierRepository.save(c,r.api);if(n.possibilities&&n.possibilities.length>0)for(const c of n.possibilities)c.choiceId=n.id,await this.possibilityRepository.save(c,r.api)}}this.createNotificationSuccess({message:this.$tc("hmnet-configurator.notifications.saveSuccess")}),await this.loadOptions()}catch(o){this.createNotificationError({message:((s=(t=(e=(i=o==null?void 0:o.response)==null?void 0:i.data)==null?void 0:e.errors)==null?void 0:t[0])==null?void 0:s.detail)??o.message??this.$tc("hmnet-configurator.notifications.saveError")})}finally{this.isSaving=!1}}}}});const{Module:y}=Shopware;y.register("hmnet-configurator-product",{type:"plugin",name:"hmnet-configurator-product",title:"hmnet-configurator.general.moduleTitle",description:"hmnet-configurator.general.moduleDescription",color:"#0E94D2",icon:"regular-settings-gear",parent:"sw-product",routePrefixName:"sw.product.detail",routePrefixPath:"sw/product/detail/:id",routeMiddleware(i,e){const t="sw.product.detail.hmnetConfigurator";e.name==="sw.product.detail"&&e.children.every(s=>s.name!==t)&&e.children.push({name:t,path:"/sw/product/detail/:id/hmnet-configurator",component:"sw-product-detail-hmnet-configurator",meta:{parentPath:"sw.product.index",privilege:"product.viewer"}}),i(e)}});const w=`{% block sw_product_detail_content_tabs_additional %} <sw-tabs-item class="sw-product-detail__tab-hmnet-configurator" :route="{ name: 'sw.product.detail.hmnetConfigurator', params: { id: $route.params.id } }" :title="$tc('hmnet-configurator.general.tabLabel')" > {{ $tc('hmnet-configurator.general.tabLabel') }} </sw-tabs-item> {% endblock %}`,{Component:v}=Shopware;v.override("sw-product-detail",{template:w});
//# sourceMappingURL=h-mnet-configurator-DpAtO6gE.js.map
