{"version":3,"file":"h-mnet-configurator-DpAtO6gE.js","sources":["../../../app/administration/src/snippet/index.js","../../../app/administration/src/module/hmnet-configurator/page/sw-product-detail-hmnet-configurator/sw-product-detail-hmnet-configurator.html.twig","../../../app/administration/src/module/hmnet-configurator/component/hmnet-configurator-choice-tree/hmnet-configurator-choice-tree.html.twig","../../../app/administration/src/module/hmnet-configurator/component/hmnet-configurator-choice-tree/index.js","../../../app/administration/src/module/hmnet-configurator/page/sw-product-detail-hmnet-configurator/index.js","../../../app/administration/src/module/hmnet-configurator/index.js","../../../app/administration/src/extension/sw-product-detail/sw-product-detail.html.twig","../../../app/administration/src/extension/sw-product-detail/index.js"],"sourcesContent":["import enGB from '../../snippet/en-GB/hmnet-configurator.json'\nimport deDE from '../../snippet/de-DE/hmnet-configurator.json'\n\nShopware.Locale.extend('en-GB', enGB)\nShopware.Locale.extend('de-DE', deDE)\n","{% block sw_product_detail_hmnet_configurator %}\n<div class=\"sw-product-detail-hmnet-configurator\">\n    <template v-if=\"isLoading\">\n        <sw-skeleton variant=\"detail-bold\" />\n        <sw-skeleton />\n    </template>\n\n    <template v-else>\n        <mt-card\n            class=\"hmnet-configurator__toolbar-card\"\n            position-identifier=\"hmnet-configurator__toolbar\"\n            :is-loading=\"isSaving\"\n        >\n            <template #title>\n                {{ $tc('hmnet-configurator.general.tabLabel') }}\n            </template>\n\n            <template #toolbar>\n                <mt-button\n                    variant=\"ghost\"\n                    :disabled=\"!acl.can('product.editor')\"\n                    @click=\"onAddOption\"\n                >\n                    <mt-icon name=\"regular-plus\" size=\"16px\" />\n                    {{ $tc('hmnet-configurator.buttons.addOption') }}\n                </mt-button>\n                <sw-button-process\n                    class=\"hmnet-configurator__save\"\n                    variant=\"primary\"\n                    :is-loading=\"isSaving\"\n                    :disabled=\"!acl.can('product.editor') || options.length === 0\"\n                    size=\"medium\"\n                    @click=\"onSaveConfigurator\"\n                >\n                    {{ $tc('hmnet-configurator.buttons.save') }}\n                </sw-button-process>\n            </template>\n        </mt-card>\n\n        <sw-empty-state\n            v-if=\"options.length === 0\"\n            class=\"hmnet-configurator__empty-state\"\n            :title=\"$tc('hmnet-configurator.empty.title')\"\n            :description=\"$tc('hmnet-configurator.empty.description')\"\n        />\n\n        <mt-card\n            v-for=\"option in options\"\n            :key=\"option.id\"\n            class=\"hmnet-configurator-option\"\n            position-identifier=\"hmnet-configurator__option-card\"\n            :title=\"option.name || $tc('hmnet-configurator.option.titlePlaceholder')\"\n            :collapsible=\"true\"\n        >\n            <template #toolbar>\n                <sw-container columns=\"5fr 2fr 3fr 1fr 1fr 1fr\" gap=\"16px\" class=\"hmnet-configurator-option__header\" justify=\"space-between\" align=\"center\">\n                    <sw-text-field\n                        class=\"hmnet-configurator-option__name\"\n                        :label=\"$tc('hmnet-configurator.option.name')\"\n                        :placeholder=\"$tc('hmnet-configurator.option.titlePlaceholder')\"\n                        v-model=\"option.name\"\n                        :disabled=\"!acl.can('product.editor')\"\n                    />\n\n                    <sw-number-field\n                        class=\"hmnet-configurator-option__position\"\n                        :label=\"$tc('hmnet-configurator.option.position')\"\n                        v-model.number=\"option.position\"\n                        :min=\"0\"\n                        :allow-empty=\"true\"\n                        :disabled=\"!acl.can('product.editor')\"\n                    />\n\n                    <sw-switch-field\n                        class=\"hmnet-configurator-option__required\"\n                        :label=\"$tc('hmnet-configurator.option.required')\"\n                        v-model=\"option.required\"\n                        :disabled=\"!acl.can('product.editor')\"\n                    />\n\n                    <sw-button-group class=\"hmnet-configurator-option__actions\">\n                        <sw-button\n                            variant=\"tertiary\"\n                            square\n                            :disabled=\"!acl.can('product.editor')\"\n                            @click=\"onAddChoice(option)\"\n                        >\n                            <mt-icon name=\"regular-plus\" size=\"16px\" />\n                        </sw-button>\n                        <sw-button\n                            variant=\"danger\"\n                            square\n                            :disabled=\"!acl.can('product.deleter')\"\n                            @click=\"onRemoveOption(option)\"\n                        >\n                            <mt-icon name=\"regular-trash\" size=\"16px\" />\n                        </sw-button>\n                    </sw-button-group>\n                </sw-container>\n            </template>\n\n            <template #default>\n                <div class=\"hmnet-configurator-option__choices\" v-if=\"option.choices.length > 0\">\n                    <hmnet-configurator-choice-tree\n                        v-for=\"choice in option.choices\"\n                        :key=\"choice.id\"\n                        :choice=\"choice\"\n                        :can-edit=\"acl.can('product.editor')\"\n                        :can-delete=\"acl.can('product.deleter')\"\n                        @remove=\"onRemoveChoice(option, $event)\"\n                        @duplicate=\"onDuplicateChoice(option, $event)\"\n                        @add-tier=\"onAddPriceTier\"\n                        @remove-tier=\"({ choice: tierChoice, tier }) => onRemovePriceTier(tierChoice, tier)\"\n                        @add-possibility=\"onAddPossibility\"\n                        @remove-possibility=\"onRemovePossibility\"\n                    />\n                </div>\n\n                <div\n                    v-else\n                    class=\"hmnet-configurator-option__choices-empty\"\n                >\n                    {{ $tc('hmnet-configurator.option.noChoices') }}\n                </div>\n            </template>\n        </mt-card>\n    </template>\n</div>\n{% endblock %}\n","{% block hmnet_configurator_choice_tree %}\n<div class=\"hmnet-configurator-choice\" :style=\"paddingStyle\">\n    <sw-card\n        class=\"hmnet-configurator-choice__card\"\n        :title=\"choice.name || $tc('hmnet-configurator.choice.titlePlaceholder')\"\n        :collapsible=\"true\"\n        :is-collapsed=\"false\"\n    >\n        <template #default>\n            <sw-container columns=\"2fr 1fr auto\" gap=\"16px\" align=\"end\">\n                <sw-text-field\n                    class=\"hmnet-configurator-choice__field\"\n                    :label=\"$tc('hmnet-configurator.choice.name')\"\n                    :placeholder=\"$tc('hmnet-configurator.choice.titlePlaceholder')\"\n                    v-model=\"choice.name\"\n                    :disabled=\"!canEdit || !acl.can('product.editor')\"\n                />\n\n                <sw-number-field\n                    class=\"hmnet-configurator-choice__field\"\n                    :label=\"$tc('hmnet-configurator.choice.position')\"\n                    v-model.number=\"choice.position\"\n                    :allow-empty=\"true\"\n                    :min=\"0\"\n                    :disabled=\"!canEdit || !acl.can('product.editor')\"\n                />\n\n                <sw-button-group\n                    class=\"hmnet-configurator-choice__toolbar\"\n                >\n                    <sw-button\n                        variant=\"tertiary\"\n                        square\n                        :disabled=\"!canEdit || !acl.can('product.editor')\"\n                        @click=\"onDuplicateChoice\"\n                    >\n                        <mt-icon name=\"regular-copy\" size=\"16px\" />\n                    </sw-button>\n                    <sw-button\n                        variant=\"danger\"\n                        square\n                        :disabled=\"!canDelete || !acl.can('product.deleter')\"\n                        @click=\"onRemoveChoice\"\n                    >\n                        <mt-icon name=\"regular-trash\" size=\"16px\" />\n                    </sw-button>\n                </sw-button-group>\n            </sw-container>\n            \n            <div class=\"hmnet-configurator-choice__price-tiers\">\n                <div class=\"hmnet-configurator-choice__price-tiers-header\">\n                    <h4>{{ $tc('hmnet-configurator.pricing.heading') }}</h4>\n                    <sw-button\n                        variant=\"ghost\"\n                        size=\"small\"\n                        :disabled=\"!canEdit || !acl.can('product.editor')\"\n                        @click=\"onAddTier\"\n                    >\n                        {{ $tc('hmnet-configurator.choice.addPriceTier') }}\n                    </sw-button>\n                </div>\n\n                <div v-if=\"priceTiers.length === 0\" class=\"hmnet-configurator-choice__price-tiers-empty\">\n                    {{ $tc('hmnet-configurator.pricing.empty') }}\n                </div>\n\n                <div\n                    v-for=\"tier in priceTiers\"\n                    :key=\"tier.id\"\n                    class=\"hmnet-configurator-choice__price-tier-row\"\n                >\n                    <sw-container columns=\"3fr 3fr 3fr 1fr\" gap=\"16px\" align=\"center\">\n                        <sw-number-field\n                            :label=\"$tc('hmnet-configurator.pricing.rangeStart')\"\n                            v-model.number=\"tier.rangeStart\"\n                            :min=\"0\"\n                            :step=\"1\"\n                            :disabled=\"!canEdit || !acl.can('product.editor')\"\n                        />\n                        <sw-number-field\n                            :label=\"$tc('hmnet-configurator.pricing.rangeEnd')\"\n                            v-model.number=\"tier.rangeEnd\"\n                            :allow-empty=\"true\"\n                            :min=\"0\"\n                            :step=\"1\"\n                            :disabled=\"!canEdit || !acl.can('product.editor')\"\n                        />\n                        <sw-number-field\n                            :label=\"$tc('hmnet-configurator.pricing.price')\"\n                            v-model.number=\"tier.price\"\n                            :min=\"0\"\n                            :step=\"0.01\"\n                            :digits=\"3\"\n                            :disabled=\"!canEdit || !acl.can('product.editor')\"\n                        />\n                        <sw-button\n                            variant=\"danger\"\n                            size=\"small\"\n                            square\n                            :disabled=\"!canDelete || !acl.can('product.deleter')\"\n                            @click=\"onRemoveTier(tier)\"\n                        >\n                            <mt-icon name=\"regular-trash\" size=\"16px\" />\n                        </sw-button>\n                    </sw-container>\n                </div>\n            </div>\n\n            <div class=\"hmnet-configurator-choice__possibilities\">\n                <div class=\"hmnet-configurator-choice__possibilities-header\">\n                    <h4>{{ $tc('hmnet-configurator.possibility.heading') }}</h4>\n                    <sw-button\n                        variant=\"ghost\"\n                        size=\"small\"\n                        :disabled=\"!canEdit || !acl.can('product.editor')\"\n                        @click=\"onAddPossibility\"\n                    >\n                        {{ $tc('hmnet-configurator.possibility.add') }}\n                    </sw-button>\n                </div>\n\n                <div\n                    v-if=\"possibilities.length === 0\"\n                    class=\"hmnet-configurator-choice__possibilities-empty\"\n                >\n                    {{ $tc('hmnet-configurator.possibility.empty') }}\n                </div>\n\n                <div\n                    v-for=\"possibility in possibilities\"\n                    :key=\"possibility.id\"\n                    class=\"hmnet-configurator-choice__possibility-row\"\n                >\n                    <sw-container columns=\"4fr 2fr 2fr 1fr\" gap=\"16px\" align=\"center\">\n                        <sw-text-field\n                            :label=\"$tc('hmnet-configurator.possibility.name')\"\n                            :placeholder=\"$tc('hmnet-configurator.possibility.titlePlaceholder')\"\n                            v-model=\"possibility.name\"\n                            :disabled=\"!canEdit || !acl.can('product.editor')\"\n                        />\n                        <sw-number-field\n                            :label=\"$tc('hmnet-configurator.possibility.multiplier')\"\n                            v-model.number=\"possibility.multiplier\"\n                            :min=\"0\"\n                            :step=\"0.01\"\n                            :digits=\"3\"\n                            :disabled=\"!canEdit || !acl.can('product.editor')\"\n                        />\n                        <sw-number-field\n                            :label=\"$tc('hmnet-configurator.possibility.position')\"\n                            v-model.number=\"possibility.position\"\n                            :allow-empty=\"true\"\n                            :min=\"0\"\n                            :disabled=\"!canEdit || !acl.can('product.editor')\"\n                        />\n                        <sw-button\n                            variant=\"danger\"\n                            size=\"small\"\n                            square\n                            :disabled=\"!canDelete || !acl.can('product.deleter')\"\n                            @click=\"onRemovePossibility(possibility)\"\n                        >\n                            <mt-icon name=\"regular-trash\" size=\"16px\" />\n                        </sw-button>\n                    </sw-container>\n                </div>\n            </div>\n        </template>\n    </sw-card>\n</div>\n{% endblock %}\n","import template from './hmnet-configurator-choice-tree.html.twig'\nimport './hmnet-configurator-choice-tree.scss'\n\nconst { Component } = Shopware\n\nComponent.register('hmnet-configurator-choice-tree', {\n\ttemplate,\n\n\tinject: ['acl'],\n\n\tprops: {\n\t\tchoice: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t\tcanEdit: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t},\n\t\tcanDelete: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t},\n\t\tnestingLevel: {\n\t\t\ttype: Number,\n\t\t\tdefault: 0,\n\t\t},\n\t},\n\n\temits: [\n\t\t'remove',\n\t\t'duplicate',\n\t\t'add-tier',\n\t\t'remove-tier',\n\t\t'add-possibility',\n\t\t'remove-possibility',\n\t],\n\n\tcomputed: {\n\t\tpaddingStyle() {\n\t\t\tconst indentation = Math.min(this.nestingLevel, 5) * 24\n\n\t\t\treturn {\n\t\t\t\t'--hmnet-configurator-choice-indent': `${indentation}px`,\n\t\t\t}\n\t\t},\n\n\t\tpriceTiers() {\n\t\t\tif (!this.choice.priceTiers) {\n\t\t\t\treturn []\n\t\t\t}\n\n\t\t\treturn this.choice.priceTiers\n\t\t},\n\n\t\tpossibilities() {\n\t\t\tif (!this.choice.possibilities) {\n\t\t\t\treturn []\n\t\t\t}\n\n\t\t\treturn this.choice.possibilities\n\t\t},\n\t},\n\n\tmethods: {\n\t\tonRemoveChoice() {\n\t\t\tthis.$emit('remove', this.choice)\n\t\t},\n\n\t\tonDuplicateChoice() {\n\t\t\tthis.$emit('duplicate', this.choice)\n\t\t},\n\n\t\tonAddTier() {\n\t\t\tthis.$emit('add-tier', this.choice)\n\t\t},\n\n\t\tonRemoveTier(tier) {\n\t\t\tthis.$emit('remove-tier', { choice: this.choice, tier })\n\t\t},\n\n\t\tonAddPossibility() {\n\t\t\tthis.$emit('add-possibility', this.choice)\n\t\t},\n\n\t\tonRemovePossibility(possibility) {\n\t\t\tthis.$emit('remove-possibility', { choice: this.choice, possibility })\n\t\t},\n\t},\n})\n","import template from './sw-product-detail-hmnet-configurator.html.twig'\nimport './sw-product-detail-hmnet-configurator.scss'\nimport '../../component/hmnet-configurator-choice-tree'\n\nconst { Component, Mixin, Context } = Shopware\nconst { Criteria, EntityCollection } = Shopware.Data\n\nComponent.register('sw-product-detail-hmnet-configurator', {\n\ttemplate,\n\n\tinject: ['repositoryFactory', 'acl'],\n\n\tmixins: [Mixin.getByName('notification')],\n\n\tdata() {\n\t\treturn {\n\t\t\tisLocalLoading: false,\n\t\t\tisSaving: false,\n\t\t\toptionsCollection: null,\n\t\t\tdeletedOptionIds: [],\n\t\t\tdeletedChoiceIds: [],\n\t\t\tdeletedPriceTierIds: [],\n\t\t\tdeletedPossibilityIds: [],\n\t\t}\n\t},\n\n\tcomputed: {\n\t\tproductStore() {\n\t\t\treturn Shopware.Store.get('swProductDetail')\n\t\t},\n\n\t\tproduct() {\n\t\t\treturn this.productStore?.product ?? null\n\t\t},\n\n\t\tproductId() {\n\t\t\treturn this.product?.id ?? null\n\t\t},\n\n\t\tisProductLoading() {\n\t\t\treturn this.productStore?.isLoading ?? false\n\t\t},\n\n\t\tlanguageId() {\n\t\t\treturn Shopware.Store.get('context').api.languageId\n\t\t},\n\n\t\toptions() {\n\t\t\tif (!this.optionsCollection) {\n\t\t\t\tthis.optionsCollection = new EntityCollection(\n\t\t\t\t\tthis.optionRepository.route,\n\t\t\t\t\tthis.optionRepository.entityName,\n\t\t\t\t\tContext.api\n\t\t\t\t)\n\t\t\t}\n\n\t\t\treturn this.optionsCollection\n\t\t},\n\n\t\toptionRepository() {\n\t\t\treturn this.repositoryFactory.create('hmnet_configurator_option')\n\t\t},\n\n\t\tchoiceRepository() {\n\t\t\treturn this.repositoryFactory.create('hmnet_configurator_choice')\n\t\t},\n\n\t\tpriceTierRepository() {\n\t\t\treturn this.repositoryFactory.create(\n\t\t\t\t'hmnet_configurator_choice_price_tier'\n\t\t\t)\n\t\t},\n\n\t\tpossibilityRepository() {\n\t\t\treturn this.repositoryFactory.create('hmnet_configurator_possibility')\n\t\t},\n\n\t\tisLoading() {\n\t\t\treturn this.isProductLoading || this.isLocalLoading\n\t\t},\n\t},\n\n\twatch: {\n\t\tproductId: {\n\t\t\thandler() {\n\t\t\t\tthis.loadOptions()\n\t\t\t},\n\t\t\timmediate: true,\n\t\t},\n\t\tlanguageId() {\n\t\t\tthis.loadOptions()\n\t\t},\n\t},\n\n\tmethods: {\n\t\tasync loadOptions() {\n\t\t\tif (!this.productId) {\n\t\t\t\tthis.optionsCollection = new EntityCollection(\n\t\t\t\t\tthis.optionRepository.route,\n\t\t\t\t\tthis.optionRepository.entityName,\n\t\t\t\t\tContext.api\n\t\t\t\t)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tthis.isLocalLoading = true\n\n\t\t\tconst criteria = new Criteria(1, 200)\n\t\t\tcriteria.addFilter(Criteria.equals('productId', this.productId))\n\t\t\tcriteria.addSorting(Criteria.sort('position', 'ASC'))\n\t\t\tcriteria.addAssociation('translations')\n\n\t\t\tconst choiceAssociation = criteria.getAssociation('choices')\n\t\t\tchoiceAssociation.addSorting(Criteria.sort('position', 'ASC'))\n\t\t\tchoiceAssociation.addAssociation('translations')\n\t\t\tchoiceAssociation.addAssociation('priceTiers')\n\t\t\tchoiceAssociation\n\t\t\t\t.getAssociation('priceTiers')\n\t\t\t\t.addSorting(Criteria.sort('rangeStart', 'ASC'))\n\t\t\tchoiceAssociation.addAssociation('possibilities')\n\t\t\tconst possibilityAssoc = choiceAssociation.getAssociation('possibilities')\n\t\t\tpossibilityAssoc.addSorting(Criteria.sort('position', 'ASC'))\n\t\t\tpossibilityAssoc.addAssociation('translations')\n\n\t\t\ttry {\n\t\t\t\tconst collection = await this.optionRepository.search(\n\t\t\t\t\tcriteria,\n\t\t\t\t\tContext.api\n\t\t\t\t)\n\n\t\t\t\tthis.optionsCollection = collection\n\t\t\t\tthis.normaliseOptions()\n\t\t\t} catch (error) {\n\t\t\t\tthis.createNotificationError({\n\t\t\t\t\tmessage: error?.response?.data?.errors?.[0]?.detail ?? error.message,\n\t\t\t\t})\n\t\t\t} finally {\n\t\t\t\tthis.isLocalLoading = false\n\t\t\t}\n\t\t},\n\n\t\tnormaliseOptions() {\n\t\t\tthis.options.forEach((option, index) => {\n\t\t\t\tthis.ensureOptionCollections(option)\n\n\t\t\t\tif (option.position === null || option.position === undefined) {\n\t\t\t\t\toption.position = index\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\n\t\tensureOptionCollections(option) {\n\t\t\tif (!(option.choices instanceof EntityCollection)) {\n\t\t\t\toption.choices = new EntityCollection(\n\t\t\t\t\tthis.choiceRepository.route,\n\t\t\t\t\tthis.choiceRepository.entityName,\n\t\t\t\t\tContext.api,\n\t\t\t\t\toption.choices?.criteria ?? new Criteria(1, 200),\n\t\t\t\t\toption.choices ? option.choices : []\n\t\t\t\t)\n\t\t\t}\n\n\t\t\toption.choices.forEach((choice, index) => {\n\t\t\t\tthis.ensureChoiceCollections(choice, index)\n\t\t\t})\n\t\t},\n\n\t\tensureChoiceCollections(choice, index = 0) {\n\t\t\tif (choice.position === null || choice.position === undefined) {\n\t\t\t\tchoice.position = index\n\t\t\t}\n\n\t\t\tif (!(choice.priceTiers instanceof EntityCollection)) {\n\t\t\t\tchoice.priceTiers = new EntityCollection(\n\t\t\t\t\tthis.priceTierRepository.route,\n\t\t\t\t\tthis.priceTierRepository.entityName,\n\t\t\t\t\tContext.api,\n\t\t\t\t\tchoice.priceTiers?.criteria ?? new Criteria(1, 100),\n\t\t\t\t\tchoice.priceTiers ? choice.priceTiers : []\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tif (!(choice.possibilities instanceof EntityCollection)) {\n\t\t\t\tchoice.possibilities = new EntityCollection(\n\t\t\t\t\tthis.possibilityRepository.route,\n\t\t\t\t\tthis.possibilityRepository.entityName,\n\t\t\t\t\tContext.api,\n\t\t\t\t\tchoice.possibilities?.criteria ?? new Criteria(1, 100),\n\t\t\t\t\tchoice.possibilities ? choice.possibilities : []\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\n\t\tcreateEmptyChoicesCollection() {\n\t\t\treturn new EntityCollection(\n\t\t\t\tthis.choiceRepository.route,\n\t\t\t\tthis.choiceRepository.entityName,\n\t\t\t\tContext.api\n\t\t\t)\n\t\t},\n\n\t\tcreateEmptyPriceTierCollection() {\n\t\t\treturn new EntityCollection(\n\t\t\t\tthis.priceTierRepository.route,\n\t\t\t\tthis.priceTierRepository.entityName,\n\t\t\t\tContext.api\n\t\t\t)\n\t\t},\n\n\t\tcreateEmptyPossibilityCollection() {\n\t\t\treturn new EntityCollection(\n\t\t\t\tthis.possibilityRepository.route,\n\t\t\t\tthis.possibilityRepository.entityName,\n\t\t\t\tContext.api\n\t\t\t)\n\t\t},\n\n\t\tonAddOption() {\n\t\t\tif (!this.acl.can('product.editor')) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst option = this.optionRepository.create(Context.api)\n\t\t\toption.productId = this.productId\n\t\t\toption.required = false\n\t\t\toption.position = this.options.length\n\t\t\toption.name = ''\n\t\t\toption.choices = this.createEmptyChoicesCollection()\n\n\t\t\tthis.options.add(option)\n\t\t},\n\n\t\tonRemoveOption(option) {\n\t\t\tif (!this.acl.can('product.deleter')) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif (!option.isNew()) {\n\t\t\t\tthis.deletedOptionIds.push(option.id)\n\t\t\t}\n\n\t\t\tthis.options.remove(option.id)\n\t\t},\n\n\t\tonAddChoice(option) {\n\t\t\tif (!this.acl.can('product.editor')) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst choice = this.choiceRepository.create(Context.api)\n\t\t\tchoice.optionId = option.id\n\t\t\tchoice.position = option.choices.length\n\t\t\tchoice.name = ''\n\t\t\tchoice.priceTiers = this.createEmptyPriceTierCollection()\n\t\t\tchoice.possibilities = this.createEmptyPossibilityCollection()\n\n\t\t\toption.choices.add(choice)\n\t\t},\n\n\t\tonRemoveChoice(option, choice) {\n\t\t\tif (!this.acl.can('product.deleter')) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tthis.markChoiceForDeletion(choice)\n\t\t\tthis.removeChoiceFromCollections(option, choice)\n\t\t},\n\n\t\tmarkChoiceForDeletion(choice) {\n\t\t\tif (!choice.isNew()) {\n\t\t\t\tthis.deletedChoiceIds.push(choice.id)\n\t\t\t}\n\n\t\t\tif (choice.priceTiers && choice.priceTiers.length > 0) {\n\t\t\t\tchoice.priceTiers.forEach((tier) => {\n\t\t\t\t\tif (!tier.isNew()) {\n\t\t\t\t\t\tthis.deletedPriceTierIds.push(tier.id)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tif (choice.possibilities && choice.possibilities.length > 0) {\n\t\t\t\tchoice.possibilities.forEach((possibility) => {\n\t\t\t\t\tthis.markPossibilityForDeletion(possibility)\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\n\t\tremoveChoiceFromCollections(option, choice) {\n\t\t\toption.choices.remove(choice.id)\n\t\t},\n\n\t\tonAddPriceTier(choice) {\n\t\t\tif (!this.acl.can('product.editor')) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst tier = this.priceTierRepository.create(Context.api)\n\t\t\ttier.choiceId = choice.id\n\t\t\ttier.rangeStart = 0\n\t\t\ttier.rangeEnd = null\n\t\t\ttier.price = 0\n\n\t\t\tchoice.priceTiers.add(tier)\n\t\t},\n\n\t\tonRemovePriceTier(choice, tier) {\n\t\t\tif (!this.acl.can('product.deleter')) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif (!tier.isNew()) {\n\t\t\t\tthis.deletedPriceTierIds.push(tier.id)\n\t\t\t}\n\n\t\t\tchoice.priceTiers.remove(tier.id)\n\t\t},\n\n\t\tonAddPossibility(choice) {\n\t\t\tif (!this.acl.can('product.editor')) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif (!(choice.possibilities instanceof EntityCollection)) {\n\t\t\t\tchoice.possibilities = this.createEmptyPossibilityCollection()\n\t\t\t}\n\n\t\t\tconst possibility = this.possibilityRepository.create(Context.api)\n\t\t\tpossibility.choiceId = choice.id\n\t\t\tpossibility.name = ''\n\t\t\tpossibility.multiplier = 1\n\t\t\tpossibility.position = choice.possibilities.length\n\n\t\t\tchoice.possibilities.add(possibility)\n\t\t},\n\n\t\tonRemovePossibility({ choice, possibility }) {\n\t\t\tif (!this.acl.can('product.deleter')) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tthis.markPossibilityForDeletion(possibility)\n\t\t\tchoice.possibilities.remove(possibility.id)\n\t\t},\n\n\t\tmarkPossibilityForDeletion(possibility) {\n\t\t\tif (!possibility || possibility.isNew()) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tthis.deletedPossibilityIds.push(possibility.id)\n\t\t},\n\n\t\tonDuplicateChoice(option, choice) {\n\t\t\tif (!this.acl.can('product.editor')) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst duplicate = this.choiceRepository.create(Context.api)\n\t\t\tduplicate.optionId = option.id\n\t\t\tduplicate.position = option.choices.length\n\t\t\tduplicate.name = choice.name\n\t\t\tduplicate.priceTiers = this.createEmptyPriceTierCollection()\n\t\t\tduplicate.possibilities = this.createEmptyPossibilityCollection()\n\n\t\t\tchoice.priceTiers.forEach((tier) => {\n\t\t\t\tconst clonedTier = this.priceTierRepository.create(Context.api)\n\t\t\t\tclonedTier.choiceId = duplicate.id\n\t\t\t\tclonedTier.rangeStart = tier.rangeStart\n\t\t\t\tclonedTier.rangeEnd = tier.rangeEnd\n\t\t\t\tclonedTier.price = tier.price\n\t\t\t\tduplicate.priceTiers.add(clonedTier)\n\t\t\t})\n\n\t\t\tchoice.possibilities.forEach((possibility) => {\n\t\t\t\tconst clonedPossibility = this.possibilityRepository.create(Context.api)\n\t\t\t\tclonedPossibility.choiceId = duplicate.id\n\t\t\t\tclonedPossibility.name = possibility.name\n\t\t\t\tclonedPossibility.multiplier = possibility.multiplier\n\t\t\t\tclonedPossibility.position = duplicate.possibilities.length\n\t\t\t\tduplicate.possibilities.add(clonedPossibility)\n\t\t\t})\n\n\t\t\toption.choices.add(duplicate)\n\t\t},\n\n\t\tasync onSaveConfigurator() {\n\t\t\tif (!this.productId) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tthis.isSaving = true\n\n\t\t\ttry {\n\t\t\t\tif (this.deletedPriceTierIds.length > 0) {\n\t\t\t\t\tawait this.priceTierRepository.delete(\n\t\t\t\t\t\tthis.deletedPriceTierIds,\n\t\t\t\t\t\tContext.api\n\t\t\t\t\t)\n\t\t\t\t\tthis.deletedPriceTierIds = []\n\t\t\t\t}\n\n\t\t\t\tif (this.deletedPossibilityIds.length > 0) {\n\t\t\t\t\tawait this.possibilityRepository.delete(\n\t\t\t\t\t\tthis.deletedPossibilityIds,\n\t\t\t\t\t\tContext.api\n\t\t\t\t\t)\n\t\t\t\t\tthis.deletedPossibilityIds = []\n\t\t\t\t}\n\n\t\t\t\tif (this.deletedChoiceIds.length > 0) {\n\t\t\t\t\tawait this.choiceRepository.delete(this.deletedChoiceIds, Context.api)\n\t\t\t\t\tthis.deletedChoiceIds = []\n\t\t\t\t}\n\n\t\t\t\tif (this.deletedOptionIds.length > 0) {\n\t\t\t\t\tawait this.optionRepository.delete(this.deletedOptionIds, Context.api)\n\t\t\t\t\tthis.deletedOptionIds = []\n\t\t\t\t}\n\n\t\t\t\tfor (const option of this.options) {\n\t\t\t\t\toption.productId = this.productId\n\n\t\t\t\t\tawait this.optionRepository.save(option, Context.api)\n\n\t\t\t\t\tfor (const choice of option.choices) {\n\t\t\t\t\t\tchoice.optionId = option.id\n\n\t\t\t\t\t\tawait this.choiceRepository.save(choice, Context.api)\n\n\t\t\t\t\t\tif (choice.priceTiers && choice.priceTiers.length > 0) {\n\t\t\t\t\t\t\tfor (const tier of choice.priceTiers) {\n\t\t\t\t\t\t\t\ttier.choiceId = choice.id\n\n\t\t\t\t\t\t\t\tif (tier.rangeEnd === '') {\n\t\t\t\t\t\t\t\t\ttier.rangeEnd = null\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tawait this.priceTierRepository.save(tier, Context.api)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (choice.possibilities && choice.possibilities.length > 0) {\n\t\t\t\t\t\t\tfor (const possibility of choice.possibilities) {\n\t\t\t\t\t\t\t\tpossibility.choiceId = choice.id\n\n\t\t\t\t\t\t\t\tawait this.possibilityRepository.save(possibility, Context.api)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\tmessage: this.$tc('hmnet-configurator.notifications.saveSuccess'),\n\t\t\t\t})\n\n\t\t\t\tawait this.loadOptions()\n\t\t\t} catch (error) {\n\t\t\t\tthis.createNotificationError({\n\t\t\t\t\tmessage:\n\t\t\t\t\t\terror?.response?.data?.errors?.[0]?.detail ??\n\t\t\t\t\t\terror.message ??\n\t\t\t\t\t\tthis.$tc('hmnet-configurator.notifications.saveError'),\n\t\t\t\t})\n\t\t\t} finally {\n\t\t\t\tthis.isSaving = false\n\t\t\t}\n\t\t},\n\t},\n})\n","import './page/sw-product-detail-hmnet-configurator'\n\nconst { Module } = Shopware\n\nModule.register('hmnet-configurator-product', {\n\ttype: 'plugin',\n\tname: 'hmnet-configurator-product',\n\ttitle: 'hmnet-configurator.general.moduleTitle',\n\tdescription: 'hmnet-configurator.general.moduleDescription',\n\tcolor: '#0E94D2',\n\ticon: 'regular-settings-gear',\n\tparent: 'sw-product',\n\troutePrefixName: 'sw.product.detail',\n\troutePrefixPath: 'sw/product/detail/:id',\n\n\trouteMiddleware(next, currentRoute) {\n\t\tconst customRouteName = 'sw.product.detail.hmnetConfigurator'\n\n\t\tif (\n\t\t\tcurrentRoute.name === 'sw.product.detail' &&\n\t\t\tcurrentRoute.children.every(\n\t\t\t\t(currentRoute) => currentRoute.name !== customRouteName\n\t\t\t)\n\t\t) {\n\t\t\tcurrentRoute.children.push({\n\t\t\t\tname: customRouteName,\n\t\t\t\tpath: '/sw/product/detail/:id/hmnet-configurator',\n\t\t\t\tcomponent: 'sw-product-detail-hmnet-configurator',\n\t\t\t\tmeta: {\n\t\t\t\t\tparentPath: 'sw.product.index',\n\t\t\t\t\tprivilege: 'product.viewer',\n\t\t\t\t},\n\t\t\t})\n\t\t}\n\t\tnext(currentRoute)\n\t},\n})\n","{% block sw_product_detail_content_tabs_additional %}\n    <sw-tabs-item\n        class=\"sw-product-detail__tab-hmnet-configurator\"\n        :route=\"{ name: 'sw.product.detail.hmnetConfigurator', params: { id: $route.params.id } }\"\n        :title=\"$tc('hmnet-configurator.general.tabLabel')\"\n    >\n        {{ $tc('hmnet-configurator.general.tabLabel') }}\n    </sw-tabs-item>\n{% endblock %}\n","import template from './sw-product-detail.html.twig'\n\nconst { Component } = Shopware\n\nComponent.override('sw-product-detail', {\n\ttemplate,\n})\n"],"names":["enGB","deDE","template$2","template$1","Component","template","tier","possibility","Mixin","Context","Criteria","EntityCollection","_a","criteria","choiceAssociation","possibilityAssoc","collection","error","_d","_c","_b","option","index","choice","duplicate","clonedTier","clonedPossibility","Module","next","currentRoute","customRouteName"],"mappings":"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"}